(def generic-register {})

(defn generic
    (d)
  (def fr {})
  (defn gf xs (apply (fr (apply d xs)) xs))
  (defn ge (dv f) (swap! fr assoc dv f))
  (swap! generic-register assoc gf ge)
  gf)

(defx defgeneric
    e (n d)
  (eval e
    (list def n (list generic d))))

(defx defmethod
    e (g dv as . xs)
  (eval e
    (list (list generic-register g) dv (list* fn as xs))))
